{"version":3,"file":"index.js","sources":["../src/encode.ts","../src/utils/to-string.ts","../src/decode.ts","../src/utils/to-buffer.ts","../src/utils/read-file.ts","../src/concat.ts","../src/decoder.ts","../src/mapping-factories.ts","../src/encoder.ts","../src/mappings-decoder.ts","../src/mappings-encoder.ts","../src/int-buffer-writer.ts","../src/int-buffer-reader.ts","../src/vlq.ts","../src/base64.ts"],"sourcesContent":["import Encoder from './encoder';\r\nimport IntBufferWriter from './int-buffer-writer';\r\nimport MappingsEncoder from './mappings-encoder';\r\nimport readFile from './utils/read-file';\r\nimport toString from './utils/to-string';\r\n\r\nexport function encode(map: any) {\r\n  const buffer: number[] = [];\r\n  const writer = new IntBufferWriter(buffer, 0);\r\n  const encoder = new Encoder(writer);\r\n  const mappingsEncoder = new MappingsEncoder(encoder);\r\n\r\n  mappingsEncoder.encode(map.mappings);\r\n\r\n  map.mappings = toString(buffer, 0, buffer.length);\r\n\r\n  return map;\r\n}\r\n\r\n/**\r\n * Takes a source map file with a decoded `mappings` section and reencodes\r\n * `mappings`.\r\n */\r\nexport function encodeFile(path: string) {\r\n  const map = JSON.parse(readFile(path));\r\n  return encode(map);\r\n}\r\n","export default function toString(buffer: number[] | Uint8Array, offset: number, len: number) {\r\n  let str = '';\r\n  for (let i = offset; i < len; i++) {\r\n    str += String.fromCharCode(buffer[i]);\r\n  }\r\n  return str;\r\n}\r\n","import Decoder from './decoder';\r\nimport IntBufferReader from './int-buffer-reader';\r\nimport { DecodedSourceMap } from './interfaces';\r\nimport MappingsDecoder from './mappings-decoder';\r\nimport readFile from './utils/read-file';\r\nimport toBuffer from './utils/to-buffer';\r\n\r\nexport function decode(map: any): DecodedSourceMap {\r\n  const buffer = toBuffer(map.mappings);\r\n  const reader = new IntBufferReader(buffer, 0, buffer.length);\r\n  const decoder = new Decoder();\r\n  const mappingsDecoder = new MappingsDecoder(decoder);\r\n\r\n  mappingsDecoder.decode(reader);\r\n\r\n  map.mappings = decoder.mappings;\r\n\r\n  return map;\r\n}\r\n\r\nexport function decodeFile(path: string) {\r\n  return decode(JSON.parse(readFile(path)));\r\n}\r\n","export default function toBuffer(str: string) {\r\n  const buffer = new Uint8Array(str.length);\r\n  for (let i = 0; i < buffer.length; i++) {\r\n    // this is for base64 so we know these are all < 123\r\n    buffer[i] = str.charCodeAt(i) | 0;\r\n  }\r\n  return buffer;\r\n}\r\n","const fs: FS | undefined = (() => {\r\n  if (typeof module === 'object' &&\r\n    typeof module.exports === 'object' &&\r\n    typeof require === 'function') {\r\n    return require('fs');\r\n  }\r\n})();\r\n\r\nconst readFile: (path: string) => string = fs === undefined ? () => { throw new Error('readFile not supported'); } :\r\n                       (path) => fs.readFileSync(path, { encoding: 'utf8' });\r\n\r\ninterface FS {\r\n  readFileSync(path: string, options: { encoding: string }): string;\r\n}\r\n\r\nexport default readFile;\r\n","import { DecodedMappings, DecodedSourceMap } from './interfaces';\r\n\r\n/**\r\n * A function that concatenates source maps.\r\n *\r\n * Source maps are expected to be in the following format:\r\n *\r\n * ```js\r\n *   {\r\n *     version: <source-map version>,\r\n *     sources: [],\r\n *     sourcesContent: [],\r\n *     names: [],\r\n *     mappings: [\r\n *       [{\r\n *         col: <position in output line>,\r\n *         src: <position in sources array>,\r\n *         srcLine: <line within source>,\r\n *         srcCol: <column within source line>,\r\n *       }]\r\n *     ],\r\n *     file:\r\n *   }\r\n * ```\r\n */\r\nexport default function concat(maps: DecodedSourceMap[]): DecodedSourceMap {\r\n  const sources: string[] = maps.reduce((acc: string[], map: DecodedSourceMap) => {\r\n    return acc.concat(map.sources);\r\n  }, []);\r\n  const sourcesContent = maps.reduce((acc: string[], map: DecodedSourceMap) => {\r\n    return acc.concat(map.sourcesContent);\r\n  }, []);\r\n  const names = maps.reduce((acc: string[], map: DecodedSourceMap) => {\r\n    return acc.concat(map.names);\r\n  }, []);\r\n\r\n  let srcOffset = 0;\r\n  let nameOffset = 0;\r\n  const mappings = maps.reduce((acc: DecodedMappings, map) => {\r\n    acc = acc.concat(map.mappings.map((lineMappings) => {\r\n      return lineMappings.map((mapping) => ({\r\n        col: mapping.col,\r\n        fieldCount: mapping.fieldCount,\r\n        name: mapping.name + nameOffset,\r\n        src: mapping.src + srcOffset,\r\n        srcCol: mapping.srcCol,\r\n        srcLine: mapping.srcLine,\r\n      }));\r\n    }));\r\n\r\n    srcOffset += map.sources.length;\r\n    nameOffset += map.names.length;\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  return {\r\n    file: '',\r\n    mappings,\r\n    names,\r\n    sources,\r\n    sourcesContent,\r\n    version: '3',\r\n  };\r\n}\r\n","import { DecodedMappings, LineMappings } from './interfaces';\r\nimport { createMapping1, createMapping4, createMapping5 } from './mapping-factories';\r\nimport { Delegate } from './mappings-decoder';\r\n\r\nexport default class Decoder implements Delegate {\r\n  public currentLine: LineMappings = [];\r\n\r\n  public mappings: DecodedMappings = [this.currentLine];\r\n\r\n  public newline() {\r\n    this.currentLine = [];\r\n    this.mappings.push(this.currentLine);\r\n  }\r\n\r\n  public mapping1(col: number) {\r\n    this.currentLine.push(createMapping1(col));\r\n  }\r\n\r\n  public mapping4(col: number, src: number, srcLine: number, srcCol: number) {\r\n    this.currentLine.push(createMapping4(col, src, srcLine, srcCol));\r\n  }\r\n\r\n  public mapping5(col: number, src: number, srcLine: number, srcCol: number, name: number) {\r\n    this.currentLine.push(createMapping5(col, src, srcLine, srcCol, name));\r\n  }\r\n}\r\n","import { DecodedMapping } from './interfaces';\r\n\r\nexport function createMapping1(col: number): DecodedMapping {\r\n  return {\r\n    col,\r\n    fieldCount: 1,\r\n    name: 0,\r\n    src: 0,\r\n    srcCol: 0,\r\n    srcLine: 0,\r\n  };\r\n}\r\n\r\nexport function createMapping4(col: number, src: number, srcLine: number, srcCol: number): DecodedMapping {\r\n  return {\r\n    col,\r\n    fieldCount: 4,\r\n    name: 0,\r\n    src,\r\n    srcCol,\r\n    srcLine,\r\n  };\r\n}\r\n\r\nexport function createMapping5(col: number,\r\n                               src: number,\r\n                               srcLine: number,\r\n                               srcCol: number,\r\n                               name: number): DecodedMapping {\r\n  return {\r\n    col,\r\n    fieldCount: 5,\r\n    name,\r\n    src,\r\n    srcCol,\r\n    srcLine,\r\n  };\r\n}\r\n","import { Delegate } from './mappings-encoder';\r\nimport { encodeVLQ } from './vlq';\r\nimport Writer from './writer';\r\n\r\nexport default class Encoder implements Delegate {\r\n  public writer: Writer;\r\n\r\n  constructor(writer: Writer) {\r\n    this.writer = writer;\r\n  }\r\n\r\n  public separator() {\r\n    this.writer.write(44); /* , */\r\n  }\r\n\r\n  public newline() {\r\n    this.writer.write(59); /* ; */\r\n  }\r\n\r\n  public write5(column: number, source: number, sourceLine: number, sourceColumn: number, name: number) {\r\n    encodeVLQ(this.writer, column);\r\n    encodeVLQ(this.writer, source);\r\n    encodeVLQ(this.writer, sourceLine);\r\n    encodeVLQ(this.writer, sourceColumn);\r\n    encodeVLQ(this.writer, name);\r\n  }\r\n\r\n  public write4(column: number, source: number, sourceLine: number, sourceColumn: number) {\r\n    encodeVLQ(this.writer, column);\r\n    encodeVLQ(this.writer, source);\r\n    encodeVLQ(this.writer, sourceLine);\r\n    encodeVLQ(this.writer, sourceColumn);\r\n  }\r\n\r\n  public write1(column: number) {\r\n    encodeVLQ(this.writer, column);\r\n  }\r\n\r\n  get length() {\r\n    return this.writer.length;\r\n  }\r\n}\r\n","import Reader from './reader';\r\nimport { decodeVLQ } from './vlq';\r\n\r\nexport interface Delegate {\r\n  newline(): void;\r\n  mapping1(column: number): void;\r\n  mapping4(column: number, source: number, sourceLine: number, sourceColumn: number): void;\r\n  mapping5(column: number, source: number, sourceLine: number, sourceColumn: number, name: number): void;\r\n}\r\n\r\nexport default class MappingsDecoder {\r\n  // absolutes\r\n  public line = 0;\r\n  public column = 0;\r\n  public source = 0;\r\n  public sourceLine = 0;\r\n  public sourceColumn = 0;\r\n  public name = 0;\r\n\r\n  public fieldCount = 0;\r\n\r\n  public delegate: Delegate;\r\n\r\n  constructor(delegate: Delegate) {\r\n    this.delegate = delegate;\r\n  }\r\n\r\n  public decode(reader: Reader) {\r\n    while (reader.hasNext()) {\r\n      switch (reader.peek()) {\r\n        case 59: // semicolon\r\n          if (this.fieldCount > 0) {\r\n            this.emitMapping();\r\n          }\r\n          this.emitNewline();\r\n          this.column = 0;\r\n          this.fieldCount = 0;\r\n          reader.next();\r\n          break;\r\n        case 44: // comma\r\n          this.emitMapping();\r\n          this.fieldCount = 0;\r\n          reader.next();\r\n          break;\r\n        default:\r\n          this.decodeField(reader);\r\n          break;\r\n      }\r\n    }\r\n    if (this.fieldCount > 0) {\r\n      this.emitMapping();\r\n    }\r\n  }\r\n\r\n  public emitNewline() {\r\n    this.delegate.newline();\r\n  }\r\n\r\n  public emitMapping() {\r\n    switch (this.fieldCount) {\r\n      case 1:\r\n        this.delegate.mapping1(this.column);\r\n        break;\r\n      case 4:\r\n        this.delegate.mapping4(this.column, this.source, this.sourceLine, this.sourceColumn);\r\n        break;\r\n      case 5:\r\n        this.delegate.mapping5(this.column, this.source, this.sourceLine, this.sourceColumn, this.name);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public decodeField(reader: Reader) {\r\n    const value = decodeVLQ(reader) | 0;\r\n    switch (this.fieldCount) {\r\n      case 0:\r\n        this.column += value;\r\n        this.fieldCount = 1;\r\n        break;\r\n      case 1:\r\n        this.source += value;\r\n        this.fieldCount = 2;\r\n        break;\r\n      case 2:\r\n        this.sourceLine += value;\r\n        this.fieldCount = 3;\r\n        break;\r\n      case 3:\r\n        this.sourceColumn += value;\r\n        this.fieldCount = 4;\r\n        break;\r\n      case 4:\r\n        this.name += value;\r\n        this.fieldCount = 5;\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { DecodedMappings } from './interfaces';\r\n\r\nexport interface Delegate {\r\n  length: number;\r\n  newline(): void;\r\n  separator(): void;\r\n  write1(column: number): void;\r\n  write4(column: number, source: number, sourceLine: number, sourceColumn: number): void;\r\n  write5(column: number, source: number, sourceLine: number, sourceColumn: number, name: number): void;\r\n}\r\n\r\nexport default class MappingsEncoder {\r\n  public column = 0;\r\n  public source = 0;\r\n  public sourceLine = 0;\r\n  public sourceColumn = 0;\r\n  public name = 0;\r\n\r\n  public delegate: Delegate;\r\n\r\n  constructor(delegate: Delegate) {\r\n    this.delegate = delegate;\r\n  }\r\n\r\n  public encode(mappings: DecodedMappings) {\r\n    for (let i = 0; i < mappings.length; i++) {\r\n      const line = mappings[i];\r\n\r\n      for (let j = 0; j < line.length; j++) {\r\n        const mapping = line[j];\r\n\r\n        switch (mapping.fieldCount) {\r\n          case 1:\r\n            this.write1(mapping);\r\n            break;\r\n          case 4:\r\n            this.write4(mapping);\r\n            break;\r\n          case 5:\r\n            this.write5(mapping);\r\n            break;\r\n          default:\r\n            missingFieldCount();\r\n        }\r\n\r\n        if (j < line.length - 1) {\r\n          // no trailing segment separator\r\n          this.separator();\r\n        }\r\n      }\r\n\r\n      if (i < mappings.length - 1 ) {\r\n        // skip trailing line separator\r\n        this.newline();\r\n      }\r\n\r\n      this.column = 0;\r\n    }\r\n\r\n    return this.delegate.length;\r\n  }\r\n\r\n  public separator() {\r\n    this.delegate.separator();\r\n  }\r\n\r\n  public newline() {\r\n    this.delegate.newline();\r\n  }\r\n\r\n  public write5(mapping: {\r\n    col: number;\r\n    src: number;\r\n    srcLine: number;\r\n    srcCol: number;\r\n    name: number;\r\n  }) {\r\n    this.delegate.write5(\r\n      mapping.col     - this.column,\r\n      mapping.src     - this.source,\r\n      mapping.srcLine - this.sourceLine,\r\n      mapping.srcCol  - this.sourceColumn,\r\n      mapping.name    - this.name);\r\n\r\n    this.column       = mapping.col;\r\n    this.source       = mapping.src;\r\n    this.sourceLine   = mapping.srcLine;\r\n    this.sourceColumn = mapping.srcCol;\r\n    this.name         = mapping.name;\r\n  }\r\n\r\n  public write4(mapping: {\r\n    col: number;\r\n    src: number;\r\n    srcLine: number;\r\n    srcCol: number;\r\n  }) {\r\n    this.delegate.write4(\r\n      mapping.col     - this.column,\r\n      mapping.src     - this.source,\r\n      mapping.srcLine - this.sourceLine,\r\n      mapping.srcCol  - this.sourceColumn);\r\n\r\n    this.column       = mapping.col;\r\n    this.source       = mapping.src;\r\n    this.sourceLine   = mapping.srcLine;\r\n    this.sourceColumn = mapping.srcCol;\r\n  }\r\n\r\n  public write1(mapping: {\r\n    col: number;\r\n  }) {\r\n    this.delegate.write1(mapping.col - this.column);\r\n\r\n    this.column = mapping.col;\r\n  }\r\n}\r\n\r\nfunction missingFieldCount() {\r\n  throw new TypeError('mappings to encode require fieldCount');\r\n}\r\n","import Writer from './writer';\r\n\r\nexport default class IntBufferWriter implements Writer {\r\n  public buf: number[] | Uint8Array;\r\n  public ptr: number;\r\n\r\n  constructor(buf: number[] | Uint8Array, ptr: number) {\r\n    this.buf = buf;\r\n    this.ptr = ptr | 0;\r\n  }\r\n\r\n  public write(n: number) {\r\n    this.buf[this.ptr++] = n | 0;\r\n  }\r\n\r\n  public get length() {\r\n    return this.buf.length;\r\n  }\r\n}\r\n","import Reader from './reader';\r\n\r\nexport default class IntBufferReader implements Reader {\r\n  public buf: number[] | Uint8Array;\r\n  public ptr: number;\r\n  public limit: number;\r\n\r\n  constructor(buf: number[] | Uint8Array, ptr: number, len: number) {\r\n    this.buf = buf;\r\n    this.ptr = ptr | 0;\r\n    this.limit = (ptr + len) | 0;\r\n  }\r\n\r\n  public peek() {\r\n    return this.buf[this.ptr | 0] | 0;\r\n  }\r\n\r\n  public read() {\r\n    const n = this.buf[this.ptr | 0] | 0;\r\n    this.ptr = (this.ptr + 1) | 0;\r\n    return n;\r\n  }\r\n\r\n  public next() {\r\n    this.ptr = (this.ptr + 1) | 0;\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    return this.ptr < this.limit;\r\n  }\r\n}\r\n","import { asciiToUint6, uint6ToASCII } from './base64';\r\nimport Reader from './reader';\r\nimport Writer from './writer';\r\n\r\n// 0 - 63 (6-bit 0 - 111111)\r\n// 32 100000 continuation bit\r\n// 31 011111 mask 5 bits\r\n// 1 is the sign bit\r\nexport function encodeVLQ(writer: Writer, v: number) {\r\n  let num = v < 0 ? (-v << 1) | 1 : v << 1;\r\n  let cont = false;\r\n  do {\r\n    let digit = num & 31;\r\n    num >>= 5;\r\n    cont = num > 0;\r\n    if (cont) {\r\n      digit |= 32;\r\n    }\r\n    writer.write(uint6ToASCII[digit]);\r\n  } while (cont);\r\n}\r\n\r\nexport function decodeVLQ(reader: Reader) {\r\n  let num = 0;\r\n  let shift = 0;\r\n  let digit = 0;\r\n  let cont = 0;\r\n  do {\r\n    digit = asciiToUint6[reader.read()];\r\n    cont  = digit & 32;\r\n    digit = digit & 31;\r\n    num   = num + (digit << shift);\r\n    shift += 5;\r\n  } while (cont > 0);\r\n  return num & 1 ? -(num >> 1) : (num >> 1);\r\n}\r\n","export let uint6ToASCII = new Uint8Array(64);\r\nexport let asciiToUint6 = new Uint8Array(127);\r\n\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\nfor (let i = 0; i < 64; i++) {\r\n  const ascii = chars.charCodeAt(i);\r\n  uint6ToASCII[i] = ascii;\r\n  asciiToUint6[ascii] = i;\r\n}\r\n"],"names":[],"mappings":"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"}